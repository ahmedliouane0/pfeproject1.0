# Generated by Django 4.2.19 on 2025-02-14 14:57

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('est_actif', models.BooleanField(default=True)),
                ('date_inscrit', models.DateTimeField(default=django.utils.timezone.now)),
                ('email', models.EmailField(max_length=254)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('keyword', models.CharField(max_length=200)),
                ('subject', models.TextField()),
                ('cr√©er_le', models.DateTimeField(auto_now_add=True)),
                ('modifier_le', models.DateTimeField(auto_now=True)),
                ('is_translated', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'articles',
            },
        ),
        migrations.CreateModel(
            name='ErrorType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'error_types',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('nom', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_position', models.IntegerField()),
                ('end_position', models.IntegerField()),
                ('incorrect_text', models.TextField()),
                ('suggested_correction', models.TextField()),
                ('explanation', models.TextField()),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('is_fixed', models.BooleanField(default=False)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='authentification.article')),
                ('error_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='authentification.errortype')),
            ],
            options={
                'db_table': 'errors',
            },
        ),
        migrations.CreateModel(
            name='Correction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('corrected_text', models.TextField()),
                ('correction_time', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('corrected_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corrections', to=settings.AUTH_USER_MODEL)),
                ('error', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corrections', to='authentification.error')),
            ],
            options={
                'db_table': 'corrections',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='source_language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_articles', to='authentification.language'),
        ),
        migrations.AddField(
            model_name='article',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to=settings.AUTH_USER_MODEL),
        ),
    ]
